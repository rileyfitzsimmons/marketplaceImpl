{"ast":null,"code":"var _jsxFileName = \"/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/providers/MoralisDappProvider/MoralisDappProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport MoralisDappContext from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoralisDappProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    web3,\n    Moralis,\n    user\n  } = useMoralis();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chainId, setChainId] = useState();\n  const [contractABI, setContractABI] = useState('[ { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"seller\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"sold\", \"type\": \"bool\" } ], \"name\": \"MarketItemCreated\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"MarketItemSold\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"createMarketItem\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" } ], \"name\": \"createMarketSale\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"fetchMarketItems\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address payable\", \"name\": \"seller\", \"type\": \"address\" }, { \"internalType\": \"address payable\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"bool\", \"name\": \"sold\", \"type\": \"bool\" } ], \"internalType\": \"struct marketPlaceBoilerPlate.MarketItem[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]');\n  const [marketAddress, setMarketAddress] = useState(\"0xd9145CCE52D386f254917e481eB44e9943F39138\");\n  useEffect(() => {\n    Moralis.onChainChanged(function (chain) {\n      setChainId(chain);\n    });\n    Moralis.onAccountsChanged(function (address) {\n      setWalletAddress(address[0]);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    var _web3$givenProvider;\n\n    return setChainId((_web3$givenProvider = web3.givenProvider) === null || _web3$givenProvider === void 0 ? void 0 : _web3$givenProvider.chainId);\n  });\n  useEffect(() => {\n    var _web3$givenProvider2;\n\n    return setWalletAddress(((_web3$givenProvider2 = web3.givenProvider) === null || _web3$givenProvider2 === void 0 ? void 0 : _web3$givenProvider2.selectedAddress) || (user === null || user === void 0 ? void 0 : user.get(\"ethAddress\")));\n  }, [web3, user]);\n  return /*#__PURE__*/_jsxDEV(MoralisDappContext.Provider, {\n    value: {\n      walletAddress,\n      chainId,\n      contractABI,\n      setContractABI,\n      marketAddress,\n      setMarketAddress\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoralisDappProvider, \"9N+RQ4mZvL4aLaDrRV8lpwFdjTc=\", false, function () {\n  return [useMoralis];\n});\n\n_c = MoralisDappProvider;\n\nfunction useMoralisDapp() {\n  _s2();\n\n  const context = React.useContext(MoralisDappContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\n  }\n\n  return context;\n}\n\n_s2(useMoralisDapp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { MoralisDappProvider, useMoralisDapp };\n\nvar _c;\n\n$RefreshReg$(_c, \"MoralisDappProvider\");","map":{"version":3,"sources":["/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/providers/MoralisDappProvider/MoralisDappProvider.js"],"names":["React","useEffect","useState","useMoralis","MoralisDappContext","MoralisDappProvider","children","web3","Moralis","user","walletAddress","setWalletAddress","chainId","setChainId","contractABI","setContractABI","marketAddress","setMarketAddress","onChainChanged","chain","onAccountsChanged","address","givenProvider","selectedAddress","get","useMoralisDapp","context","useContext","undefined","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,kBAAP,MAA+B,WAA/B;;;AAEA,SAASC,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BN,UAAU,EAA1C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAC5C,k5EAD4C,CAA9C;AAGA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAChD,4CADgD,CAAlD;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACU,cAAR,CAAuB,UAAUC,KAAV,EAAiB;AACtCN,MAAAA,UAAU,CAACM,KAAD,CAAV;AACD,KAFD;AAIAX,IAAAA,OAAO,CAACY,iBAAR,CAA0B,UAAUC,OAAV,EAAmB;AAC3CV,MAAAA,gBAAgB,CAACU,OAAO,CAAC,CAAD,CAAR,CAAhB;AACD,KAFD,EALc,CAQd;AACD,GATQ,EASN,EATM,CAAT,CAVyC,CAqBzC;;AACApB,EAAAA,SAAS,CAAC;AAAA;;AAAA,WAAMY,UAAU,wBAACN,IAAI,CAACe,aAAN,wDAAC,oBAAoBV,OAArB,CAAhB;AAAA,GAAD,CAAT;AACAX,EAAAA,SAAS,CACP;AAAA;;AAAA,WACEU,gBAAgB,CACd,yBAAAJ,IAAI,CAACe,aAAL,8EAAoBC,eAApB,MAAuCd,IAAvC,aAAuCA,IAAvC,uBAAuCA,IAAI,CAAEe,GAAN,CAAU,YAAV,CAAvC,CADc,CADlB;AAAA,GADO,EAKP,CAACjB,IAAD,EAAOE,IAAP,CALO,CAAT;AAQA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aADK;AAELE,MAAAA,OAFK;AAGLE,MAAAA,WAHK;AAILC,MAAAA,cAJK;AAKLC,MAAAA,aALK;AAMLC,MAAAA;AANK,KADT;AAAA,cAUGX;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7CQD,mB;UACyBF,U;;;KADzBE,mB;;AA+CT,SAASoB,cAAT,GAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAG1B,KAAK,CAAC2B,UAAN,CAAiBvB,kBAAjB,CAAhB;;AACA,MAAIsB,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACD;;AACD,SAAOH,OAAP;AACD;;IANQD,c;;AAQT,SAASpB,mBAAT,EAA8BoB,cAA9B","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport MoralisDappContext from \"./context\";\r\n\r\nfunction MoralisDappProvider({ children }) {\r\n  const { web3, Moralis, user } = useMoralis();\r\n  const [walletAddress, setWalletAddress] = useState();\r\n  const [chainId, setChainId] = useState();\r\n  const [contractABI, setContractABI] = useState(\r\n    '[ { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"seller\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"sold\", \"type\": \"bool\" } ], \"name\": \"MarketItemCreated\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"MarketItemSold\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"createMarketItem\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" } ], \"name\": \"createMarketSale\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"fetchMarketItems\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"itemId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"nftContract\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address payable\", \"name\": \"seller\", \"type\": \"address\" }, { \"internalType\": \"address payable\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"bool\", \"name\": \"sold\", \"type\": \"bool\" } ], \"internalType\": \"struct marketPlaceBoilerPlate.MarketItem[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]'\r\n  );\r\n  const [marketAddress, setMarketAddress] = useState(\r\n    \"0xd9145CCE52D386f254917e481eB44e9943F39138\"\r\n  );\r\n  useEffect(() => {\r\n    Moralis.onChainChanged(function (chain) {\r\n      setChainId(chain);\r\n    });\r\n\r\n    Moralis.onAccountsChanged(function (address) {\r\n      setWalletAddress(address[0]);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => setChainId(web3.givenProvider?.chainId));\r\n  useEffect(\r\n    () =>\r\n      setWalletAddress(\r\n        web3.givenProvider?.selectedAddress || user?.get(\"ethAddress\")\r\n      ),\r\n    [web3, user]\r\n  );\r\n\r\n  return (\r\n    <MoralisDappContext.Provider\r\n      value={{\r\n        walletAddress,\r\n        chainId,\r\n        contractABI,\r\n        setContractABI,\r\n        marketAddress,\r\n        setMarketAddress,\r\n      }}\r\n    >\r\n      {children}\r\n    </MoralisDappContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useMoralisDapp() {\r\n  const context = React.useContext(MoralisDappContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { MoralisDappProvider, useMoralisDapp };\r\n"]},"metadata":{},"sourceType":"module"}