{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getNativeByChain } from \"helpers/networks\";\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useMoralis, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\nexport const useNativeBalance = options => {\n  _s();\n\n  const {\n    account\n  } = useMoralisWeb3Api();\n  const {\n    Moralis\n  } = useMoralis();\n  const {\n    chainId,\n    walletAddress\n  } = useMoralisDapp();\n  const [balance, setBalance] = useState({\n    inWei: 0,\n    formatted: 0\n  });\n  const nativeName = useMemo(() => getNativeByChain((options === null || options === void 0 ? void 0 : options.chain) || chainId), [options, chainId]);\n  const {\n    fetch: getBalance,\n    data,\n    error,\n    isLoading\n  } = useMoralisWeb3ApiCall(account.getNativeBalance, {\n    chain: chainId,\n    address: walletAddress,\n    ...options\n  });\n  useEffect(() => {\n    if (data === null || data === void 0 ? void 0 : data.balance) {\n      const balances = {\n        inWei: data.balance,\n        // missing second argument (decimals) in FromWei function,\n        formatted: Moralis.Units.FromWei(data.balance)\n      };\n      setBalance(balances);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [data]);\n  return {\n    getBalance,\n    balance,\n    nativeName,\n    error,\n    isLoading\n  };\n};\n\n_s(useNativeBalance, \"B6wma3/zF9ydTMHQuSyKch49RlY=\", false, function () {\n  return [useMoralisWeb3Api, useMoralis, useMoralisDapp, useMoralisWeb3ApiCall];\n});","map":{"version":3,"sources":["/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/hooks/useNativeBalance.js"],"names":["getNativeByChain","useMoralisDapp","useEffect","useMemo","useState","useMoralis","useMoralisWeb3Api","useMoralisWeb3ApiCall","useNativeBalance","options","account","Moralis","chainId","walletAddress","balance","setBalance","inWei","formatted","nativeName","chain","fetch","getBalance","data","error","isLoading","getNativeBalance","address","balances","Units","FromWei"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,cAAT,QAA+B,mDAA/B;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,qBAAxC,QAAqE,eAArE;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcN,UAAU,EAA9B;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA6BZ,cAAc,EAAjD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,SAAS,EAAE;AAAvB,GAAD,CAAtC;AAEA,QAAMC,UAAU,GAAGf,OAAO,CAAC,MAAMH,gBAAgB,CAAC,CAAAS,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEU,KAAT,KAAkBP,OAAnB,CAAvB,EAAoD,CAACH,OAAD,EAAUG,OAAV,CAApD,CAA1B;AAEA,QAAM;AACJQ,IAAAA,KAAK,EAAEC,UADH;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFjB,qBAAqB,CAACG,OAAO,CAACe,gBAAT,EAA2B;AAClDN,IAAAA,KAAK,EAAEP,OAD2C;AAElDc,IAAAA,OAAO,EAAEb,aAFyC;AAGlD,OAAGJ;AAH+C,GAA3B,CALzB;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAER,OAAV,EAAmB;AACjB,YAAMa,QAAQ,GAAG;AACfX,QAAAA,KAAK,EAAEM,IAAI,CAACR,OADG;AAEf;AACAG,QAAAA,SAAS,EAAEN,OAAO,CAACiB,KAAR,CAAcC,OAAd,CAAsBP,IAAI,CAACR,OAA3B;AAHI,OAAjB;AAKAC,MAAAA,UAAU,CAACY,QAAD,CAAV;AACD,KARa,CASd;;AACD,GAVQ,EAUN,CAACL,IAAD,CAVM,CAAT;AAYA,SAAO;AAAED,IAAAA,UAAF;AAAcP,IAAAA,OAAd;AAAuBI,IAAAA,UAAvB;AAAmCK,IAAAA,KAAnC;AAA0CC,IAAAA;AAA1C,GAAP;AACD,CAhCM;;GAAMhB,gB;UACSF,iB,EACAD,U,EACeJ,c,EAU/BM,qB","sourcesContent":["import { getNativeByChain } from \"helpers/networks\";\r\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\r\n\r\nexport const useNativeBalance = (options) => {\r\n  const { account } = useMoralisWeb3Api();\r\n  const { Moralis } = useMoralis();\r\n  const { chainId, walletAddress } = useMoralisDapp();\r\n  const [balance, setBalance] = useState({ inWei: 0, formatted: 0 });\r\n\r\n  const nativeName = useMemo(() => getNativeByChain(options?.chain || chainId), [options, chainId]);\r\n\r\n  const {\r\n    fetch: getBalance,\r\n    data,\r\n    error,\r\n    isLoading,\r\n  } = useMoralisWeb3ApiCall(account.getNativeBalance, {\r\n    chain: chainId,\r\n    address: walletAddress,\r\n    ...options,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data?.balance) {\r\n      const balances = {\r\n        inWei: data.balance,\r\n        // missing second argument (decimals) in FromWei function,\r\n        formatted: Moralis.Units.FromWei(data.balance),\r\n      };\r\n      setBalance(balances);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  return { getBalance, balance, nativeName, error, isLoading };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}