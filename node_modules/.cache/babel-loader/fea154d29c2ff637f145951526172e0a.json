{"ast":null,"code":"var _jsxFileName = \"/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/components/SearchCollections.jsx\",\n    _s = $RefreshSig$();\n\nimport { Select } from \"antd\";\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getCollectionsByChain } from \"helpers/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchCollections(_ref) {\n  _s();\n\n  let {\n    setInputValue\n  } = _ref;\n  const {\n    Option\n  } = Select;\n  const {\n    chainId\n  } = useMoralisDapp();\n  const NFTCollections = getCollectionsByChain(chainId);\n\n  function onChange(value) {\n    setInputValue(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: \"1000px\",\n        marginLeft: \"20px\"\n      },\n      placeholder: \"Find a collection\",\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      children: NFTCollections && NFTCollections.map((collection, i) => /*#__PURE__*/_jsxDEV(Option, {\n        value: collection.addrs,\n        children: collection.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchCollections, \"Q3Iq7A33gnqexI4ouqZk42Vxu0g=\", false, function () {\n  return [useMoralisDapp];\n});\n\n_c = SearchCollections;\nexport default SearchCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCollections\");","map":{"version":3,"sources":["/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/components/SearchCollections.jsx"],"names":["Select","useMoralisDapp","getCollectionsByChain","SearchCollections","setInputValue","Option","chainId","NFTCollections","onChange","value","width","marginLeft","map","collection","i","addrs","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mDAA/B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;;AAEA,SAASC,iBAAT,OAA8C;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaL,MAAnB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcL,cAAc,EAAlC;AACA,QAAMM,cAAc,GAAGL,qBAAqB,CAACI,OAAD,CAA5C;;AAEA,WAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvBL,IAAAA,aAAa,CAACK,KAAD,CAAb;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAFT;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,gBAAgB,EAAC,UAJnB;AAKE,MAAA,QAAQ,EAAEH,QALZ;AAAA,gBAOGD,cAAc,IACbA,cAAc,CAACK,GAAf,CAAmB,CAACC,UAAD,EAAaC,CAAb,kBACjB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,UAAU,CAACE,KAA1B;AAAA,kBACGF,UAAU,CAACG;AADd,SAAsCF,CAAtC;AAAA;AAAA;AAAA;AAAA,cADF;AARJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GA3BQX,iB;UAEaF,c;;;KAFbE,iB;AA6BT,eAAeA,iBAAf","sourcesContent":["import { Select } from \"antd\";\r\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\nfunction SearchCollections({ setInputValue }) {\r\n  const { Option } = Select;\r\n  const { chainId } = useMoralisDapp();\r\n  const NFTCollections = getCollectionsByChain(chainId);\r\n\r\n  function onChange(value) {\r\n    setInputValue(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        showSearch\r\n        style={{ width: \"1000px\", marginLeft: \"20px\" }}\r\n        placeholder=\"Find a collection\"\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n      >\r\n        {NFTCollections &&\r\n          NFTCollections.map((collection, i) => (\r\n            <Option value={collection.addrs} key={i}>\r\n              {collection.name}\r\n            </Option>\r\n          ))}\r\n      </Select>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchCollections;\r\n"]},"metadata":{},"sourceType":"module"}