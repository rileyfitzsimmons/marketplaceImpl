{"ast":null,"code":"var _jsxFileName = \"/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/components/AddressInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getEllipsisTxt } from \"../helpers/formatters\";\nimport Blockie from \"./Blockie\";\nimport { Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddressInput(props) {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const [validatedAddress, setValidatedAddress] = useState(\"\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (validatedAddress) props.onChange(address);\n  }, [address]);\n  const updateAddress = useCallback(address => {\n    if (address.length === 42) setValidatedAddress(getEllipsisTxt(address, 10));\n    setAddress(address);\n  }, []);\n\n  const Cross = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"22\",\n    height: \"22\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: \"2\",\n    stroke: \"#E33132\",\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    onClick: () => setValidatedAddress(\"\"),\n    style: {\n      cursor: \"pointer\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      stroke: \"none\",\n      d: \"M0 0h24v24H0z\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"18\",\n      y1: \"6\",\n      x2: \"6\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"6\",\n      y1: \"6\",\n      x2: \"18\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    size: \"large\",\n    placeholder: props.placeholder ? props.placeholder : \"Public address 0x\",\n    prefix: address ? /*#__PURE__*/_jsxDEV(Blockie, {\n      address: address.toLowerCase(),\n      size: 8,\n      scale: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this),\n    suffix: validatedAddress && /*#__PURE__*/_jsxDEV(Cross, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 35\n    }, this),\n    autoFocus: props.autoFocus,\n    value: validatedAddress || address,\n    onChange: e => {\n      updateAddress(e.target.value);\n    },\n    disabled: validatedAddress,\n    style: validatedAddress ? { ...(props === null || props === void 0 ? void 0 : props.style),\n      border: \"1px solid rgb(33, 191, 150)\"\n    } : { ...(props === null || props === void 0 ? void 0 : props.style)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressInput, \"giviHvZO/hY1yTaJfzEkiDEAYfQ=\");\n\n_c = AddressInput;\nexport default AddressInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"sources":["/Users/rileyfitzsimmons/Downloads/nftMarketplace/ethereum-boilerplate/src/components/AddressInput.jsx"],"names":["useCallback","useEffect","useState","getEllipsisTxt","Blockie","Input","SearchOutlined","AddressInput","props","address","setAddress","validatedAddress","setValidatedAddress","onChange","updateAddress","length","Cross","cursor","placeholder","toLowerCase","autoFocus","e","target","value","style","border"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD,CAF2B,CAI3B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,gBAAJ,EAAsBH,KAAK,CAACK,QAAN,CAAeJ,OAAf;AACvB,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,QAAMK,aAAa,GAAGd,WAAW,CAAES,OAAD,IAAa;AAC7C,QAAIA,OAAO,CAACM,MAAR,KAAmB,EAAvB,EAA2BH,mBAAmB,CAACT,cAAc,CAACM,OAAD,EAAU,EAAV,CAAf,CAAnB;AAC3BC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAHgC,EAG9B,EAH8B,CAAjC;;AAKA,QAAMO,KAAK,GAAG,mBACZ;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,KAAK,EAAC,IAFR;AAGE,IAAA,MAAM,EAAC,IAHT;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,WAAW,EAAC,GALd;AAME,IAAA,MAAM,EAAC,SANT;AAOE,IAAA,IAAI,EAAC,MAPP;AAQE,IAAA,aAAa,EAAC,OARhB;AASE,IAAA,cAAc,EAAC,OATjB;AAUE,IAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAAC,EAAD,CAVpC;AAWE,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAXT;AAAA,4BAaE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,CAAC,EAAC,eAAtB;AAAsC,MAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAM,MAAA,EAAE,EAAC,IAAT;AAAc,MAAA,EAAE,EAAC,GAAjB;AAAqB,MAAA,EAAE,EAAC,GAAxB;AAA4B,MAAA,EAAE,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAoB,MAAA,EAAE,EAAC,IAAvB;AAA4B,MAAA,EAAE,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAoBA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAET,KAAK,CAACU,WAAN,GAAoBV,KAAK,CAACU,WAA1B,GAAwC,mBAFvD;AAGE,IAAA,MAAM,EACJT,OAAO,gBACL,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAO,CAACU,WAAR,EAAlB;AAAyC,MAAA,IAAI,EAAE,CAA/C;AAAkD,MAAA,KAAK,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAPN;AAUE,IAAA,MAAM,EAAER,gBAAgB,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAV9B;AAWE,IAAA,SAAS,EAAEH,KAAK,CAACY,SAXnB;AAYE,IAAA,KAAK,EAAET,gBAAgB,IAAIF,OAZ7B;AAaE,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACfP,MAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,KAfH;AAgBE,IAAA,QAAQ,EAAEZ,gBAhBZ;AAiBE,IAAA,KAAK,EACHA,gBAAgB,GACZ,EAAE,IAAGH,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEgB,KAAV,CAAF;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KADY,GAEZ,EAAE,IAAGjB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEgB,KAAV;AAAF;AApBR;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA3DQjB,Y;;KAAAA,Y;AA6DT,eAAeA,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { getEllipsisTxt } from \"../helpers/formatters\";\r\nimport Blockie from \"./Blockie\";\r\nimport { Input } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction AddressInput(props) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [validatedAddress, setValidatedAddress] = useState(\"\");\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    if (validatedAddress) props.onChange(address);\r\n  }, [address]);\r\n\r\n  const updateAddress = useCallback((address) => {\r\n    if (address.length === 42) setValidatedAddress(getEllipsisTxt(address, 10));\r\n    setAddress(address);\r\n  }, []);\r\n\r\n  const Cross = () => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"22\"\r\n      height=\"22\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"2\"\r\n      stroke=\"#E33132\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      onClick={() => setValidatedAddress(\"\")}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      size=\"large\"\r\n      placeholder={props.placeholder ? props.placeholder : \"Public address 0x\"}\r\n      prefix={\r\n        address ? (\r\n          <Blockie address={address.toLowerCase()} size={8} scale={3} />\r\n        ) : (\r\n          <SearchOutlined />\r\n        )\r\n      }\r\n      suffix={validatedAddress && <Cross />}\r\n      autoFocus={props.autoFocus}\r\n      value={validatedAddress || address}\r\n      onChange={(e) => {\r\n        updateAddress(e.target.value);\r\n      }}\r\n      disabled={validatedAddress}\r\n      style={\r\n        validatedAddress\r\n          ? { ...props?.style, border: \"1px solid rgb(33, 191, 150)\" }\r\n          : { ...props?.style }\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AddressInput;\r\n"]},"metadata":{},"sourceType":"module"}